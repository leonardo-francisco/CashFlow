version: '3.9'

services:
  authentication-api:
    build:
      context: ./CashFlow.AuthenticationAPI
      dockerfile: Dockerfile
    ports:
      - "8080:5000"
      - "8081:5001"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      OPENAPI_MODE: "Docker"
      AdminCredentials__Username: "admin@cashflow.com.br"
      AdminCredentials__Password: "123456"
      Key__Secret: "fedaf7d8863b48e197b9287d492b708e"
      Key__Issuer: "meuSistema"
      Key__Audience: "meuSistemaUsuario"
    depends_on:
      - mongo
      - redis
      - rabbitmq

  dailybalance-api:
    build:
      context: ./CashFlow.DailyBalanceAPI
      dockerfile: Dockerfile
    ports:
      - "8082:5002"
      - "8083:5003"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      OPENAPI_MODE: "Docker"
      Mongo__ConnectionString: "mongodb://mongo:27017"
      Mongo__DatabaseName: "CashFlowDB"
      Key__Secret: "fedaf7d8863b48e197b9287d492b708e"
      Key__Issuer: "meuSistema"
      Key__Audience: "meuSistemaUsuario"
      ConnectionStrings__Redis: "redis:6379"
      RabbitMq__HostName: "rabbitmq"
      RabbitMq__Port: "5672"
      RabbitMq__UserName: "guest"
      RabbitMq__Password: "guest"
      RabbitMq__Exchange: "transactions.exchange"
    depends_on:
      - mongo
      - redis
      - rabbitmq
  
  transaction-api:
    build:
      context: ./CashFlow.TransactionAPI
      dockerfile: Dockerfile
    ports:
      - "8084:5004"
      - "8085:5005"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      OPENAPI_MODE: "Docker"
      Mongo__ConnectionString: "mongodb://mongo:27017"
      Mongo__DatabaseName: "CashFlowDB"
      Key__Secret: "fedaf7d8863b48e197b9287d492b708e"
      Key__Issuer: "meuSistema"
      Key__Audience: "meuSistemaUsuario"
      ConnectionStrings__Redis: "redis:6379"
      RabbitMq__HostName: "rabbitmq"
      RabbitMq__Port: "5672"
      RabbitMq__UserName: "guest"
      RabbitMq__Password: "guest"
      RabbitMq__Exchange: "transactions.exchange"
    depends_on:
      - mongo
      - redis
      - rabbitmq

  # MongoDB
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # Redis
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # RabbitMQ com painel de administracao
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # Porta para aplicacoes
      - "15672:15672" # UI do RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  mongo_data:
  redis_data:
  rabbitmq_data: